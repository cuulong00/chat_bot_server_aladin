#!/usr/bin/env python3
"""Debug b·∫±ng direct search."""

import sys
from pathlib import Path
from dotenv import load_dotenv

# Setup path  
THIS_FILE = Path(__file__).resolve()
PROJECT_ROOT = THIS_FILE.parent
if str(PROJECT_ROOT) not in sys.path:
    sys.path.insert(0, str(PROJECT_ROOT))

from src.database.qdrant_store import QdrantStore

def test_direct_phrases():
    """Test v·ªõi phrases c·ª• th·ªÉ t·ª´ sections."""
    
    load_dotenv()
    
    qdrant_store = QdrantStore(
        collection_name="tianlong_marketing", 
        embedding_model="google-text-embedding-004"
    )
    
    # Test phrases tr·ª±c ti·∫øp t·ª´ sections
    test_cases = [
        # T·ª´ section ∆∞u ƒë√£i
        ("T·∫∑ng 01 khay b√≤ t∆∞∆°i 1 M√©t", "section_07"),
        ("∆∞u ƒë√£i sinh nh·∫≠t", "section_07"), 
        ("Tian Long L√™ VƒÉn S·ªπ", "section_07"),
        
        # T·ª´ section chi nh√°nh
        ("TIAN LONG TR·∫¶N TH√ÅI T√îNG", "section_05"),
        ("107-D5 Tr·∫ßn Th√°i T√¥ng", "section_05"),
        ("8 chi nh√°nh", "section_05"),
        ("CHI NH√ÅNH H√Ä N·ªòI", "section_05"),
    ]
    
    print("üß™ TESTING DIRECT PHRASES FROM SECTIONS")
    print("=" * 60)
    
    for phrase, expected_section in test_cases:
        print(f"\nüîç Query: '{phrase}'")
        print(f"   Expected: {expected_section}")
        print("-" * 40)
        
        results = qdrant_store.search(query=phrase, limit=3, namespace=None)
        
        found_expected = False
        if results:
            for i, (chunk_id, doc_dict, score) in enumerate(results, 1):
                section_id = doc_dict.get('section_id', 'unknown')
                title = doc_dict.get('title', 'No title')
                
                print(f"   {i}. {section_id}: {title} (score: {score:.4f})")
                
                if section_id == expected_section:
                    found_expected = True
                    print(f"      ‚úÖ FOUND EXPECTED SECTION!")
                    
            if not found_expected:
                print(f"   ‚ùå Expected section {expected_section} NOT found!")
        else:
            print(f"   ‚ùå No results at all!")

if __name__ == "__main__":
    test_direct_phrases()
