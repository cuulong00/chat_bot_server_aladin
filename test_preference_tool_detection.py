#!/usr/bin/env python3
"""
Test to verify tool call detection for user preferences
"""

import logging
import sys
import os
sys.path.append(os.path.dirname(__file__))

# Set up logging
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s [%(levelname)s] %(message)s',
    handlers=[logging.StreamHandler()]
)

def test_preference_detection():
    """Test phrases that should trigger save_user_preference tool"""
    
    test_phrases = [
        "anh th√≠ch ƒÉn cay",
        "t√¥i y√™u th√≠ch l·∫©u b√≤", 
        "em hay ƒÉn cay",
        "anh th∆∞·ªùng ƒë·∫∑t b√†n t·ªëi",
        "t√¥i mu·ªën kh√¥ng gian y√™n tƒ©nh",
        "anh ∆∞·ªõc c√≥ th·ªÉ ƒÉn tho·∫£i m√°i",
        "h√¥m nay l√† sinh nh·∫≠t t√¥i",
        "b√© th√≠ch ƒÉn ng·ªçt",
        "gia ƒë√¨nh lu√¥n ch·ªçn b√†n g·∫ßn c·ª≠a s·ªï"
    ]
    
    print("üîç TESTING PREFERENCE DETECTION PHRASES:")
    print("=" * 50)
    
    for i, phrase in enumerate(test_phrases, 1):
        print(f"{i:2d}. '{phrase}'")
        
        # Check for keywords
        keywords_found = []
        if any(word in phrase.lower() for word in ['th√≠ch', 'y√™u th√≠ch', '∆∞a']):
            keywords_found.append('S·ªû TH√çCH')
        if any(word in phrase.lower() for word in ['th∆∞·ªùng', 'hay', 'lu√¥n', 'quen']):
            keywords_found.append('TH√ìI QUEN')
        if any(word in phrase.lower() for word in ['mong mu·ªën', '∆∞·ªõc', 'mu·ªën', 'c·∫ßn']):
            keywords_found.append('MONG MU·ªêN')
        if 'sinh nh·∫≠t' in phrase.lower():
            keywords_found.append('SINH NH·∫¨T')
            
        if keywords_found:
            print(f"    ‚úÖ SHOULD TRIGGER TOOL: {', '.join(keywords_found)}")
        else:
            print(f"    ‚ùå NO TRIGGER DETECTED")
        print()

if __name__ == "__main__":
    test_preference_detection()
