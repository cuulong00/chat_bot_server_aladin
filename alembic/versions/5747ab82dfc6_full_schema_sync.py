"""full schema sync

Revision ID: 5747ab82dfc6
Revises: 
Create Date: 2025-07-07 07:22:00.497091

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5747ab82dfc6'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('checkpoint_migrations')
    op.alter_column('aircrafts_data', 'aircraft_code',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('airports_data', 'airport_code',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('boarding_passes', 'ticket_no',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('boarding_passes', 'flight_id',
               existing_type=sa.BIGINT(),
               nullable=False)
    op.alter_column('bookings', 'book_ref',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('car_rentals', 'id',
               existing_type=sa.BIGINT(),
               nullable=False,
               autoincrement=True)
    op.drop_index(op.f('checkpoint_blobs_thread_id_idx'), table_name='checkpoint_blobs')
    op.drop_index(op.f('checkpoint_writes_thread_id_idx'), table_name='checkpoint_writes')
    op.add_column('checkpoints', sa.Column('created_at', sa.Text(), nullable=True))
    op.drop_index(op.f('checkpoints_thread_id_idx'), table_name='checkpoints')
    op.alter_column('flights', 'flight_id',
               existing_type=sa.BIGINT(),
               nullable=False,
               autoincrement=True)
    op.alter_column('hotels', 'id',
               existing_type=sa.BIGINT(),
               nullable=False,
               autoincrement=True)
    op.alter_column('seats', 'aircraft_code',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('seats', 'seat_no',
               existing_type=sa.TEXT(),
               nullable=False)
    op.drop_index(op.f('idx_store_expires_at'), table_name='store', postgresql_where='(expires_at IS NOT NULL)')
    op.drop_index(op.f('store_prefix_idx'), table_name='store')
    op.alter_column('ticket_flights', 'ticket_no',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('ticket_flights', 'flight_id',
               existing_type=sa.BIGINT(),
               nullable=False)
    op.alter_column('tickets', 'ticket_no',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('trip_recommendations', 'id',
               existing_type=sa.BIGINT(),
               nullable=False,
               autoincrement=True)
    op.drop_constraint(op.f('user_threads_user_id_fkey'), 'user_threads', type_='foreignkey')
    op.drop_constraint(op.f('fk_user_tickets_user_id'), 'user_tickets', type_='foreignkey')
    op.drop_index(op.f('idx_users_email'), table_name='users')
    op.drop_index(op.f('idx_users_user_id'), table_name='users')
    op.drop_constraint(op.f('users_email_key'), 'users', type_='unique')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(op.f('users_email_key'), 'users', ['email'], postgresql_nulls_not_distinct=False)
    op.create_index(op.f('idx_users_user_id'), 'users', ['user_id'], unique=False)
    op.create_index(op.f('idx_users_email'), 'users', ['email'], unique=False)
    op.create_foreign_key(op.f('fk_user_tickets_user_id'), 'user_tickets', 'users', ['user_id'], ['user_id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('user_threads_user_id_fkey'), 'user_threads', 'users', ['user_id'], ['user_id'], ondelete='CASCADE')
    op.alter_column('trip_recommendations', 'id',
               existing_type=sa.BIGINT(),
               nullable=True,
               autoincrement=True)
    op.alter_column('tickets', 'ticket_no',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('ticket_flights', 'flight_id',
               existing_type=sa.BIGINT(),
               nullable=True)
    op.alter_column('ticket_flights', 'ticket_no',
               existing_type=sa.TEXT(),
               nullable=True)
    op.create_index(op.f('store_prefix_idx'), 'store', ['prefix'], unique=False)
    op.create_index(op.f('idx_store_expires_at'), 'store', ['expires_at'], unique=False, postgresql_where='(expires_at IS NOT NULL)')
    op.alter_column('seats', 'seat_no',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('seats', 'aircraft_code',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('hotels', 'id',
               existing_type=sa.BIGINT(),
               nullable=True,
               autoincrement=True)
    op.alter_column('flights', 'flight_id',
               existing_type=sa.BIGINT(),
               nullable=True,
               autoincrement=True)
    op.create_index(op.f('checkpoints_thread_id_idx'), 'checkpoints', ['thread_id'], unique=False)
    op.drop_column('checkpoints', 'created_at')
    op.create_index(op.f('checkpoint_writes_thread_id_idx'), 'checkpoint_writes', ['thread_id'], unique=False)
    op.create_index(op.f('checkpoint_blobs_thread_id_idx'), 'checkpoint_blobs', ['thread_id'], unique=False)
    op.alter_column('car_rentals', 'id',
               existing_type=sa.BIGINT(),
               nullable=True,
               autoincrement=True)
    op.alter_column('bookings', 'book_ref',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('boarding_passes', 'flight_id',
               existing_type=sa.BIGINT(),
               nullable=True)
    op.alter_column('boarding_passes', 'ticket_no',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('airports_data', 'airport_code',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('aircrafts_data', 'aircraft_code',
               existing_type=sa.TEXT(),
               nullable=True)
    op.create_table('checkpoint_migrations',
    sa.Column('v', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('v', name=op.f('checkpoint_migrations_pkey'))
    )
    # ### end Alembic commands ###
